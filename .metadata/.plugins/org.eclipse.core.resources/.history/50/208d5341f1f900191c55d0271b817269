package polymorphismOOP;

public class ModernCalculator extends LandCalculator{
	
	//Method overriding(same method same parameter but different syntax or logic)
	//Late binding or dynamic binding or runtime polymorphism
	@Override
	public int areaOfLand(int a,int b) {
		int total=a+b+5;
		System.out.println("AreaOfland : "+total);
		return total;
		}
	@Override
	public int areaOfLand(int a,int b,int c) {
		int total=a+b+c-3;
		System.out.println("AreaOfland : "+total);
		return total;
		}
//	//Final method can be overloaded
//	@Override
//	public final int areaOfLand(int a,int b,int c,int d) {
//		int total=a+b+c+d;
//		System.out.println("AreaOfland : "+total);
//		return total;
//		}
//	//Static method can be overloaded
//	@Override
//	public static  int areaOfLand(int a,int b,int c,int d,int e) {
//		int total=a+b+c+d+e;
//		System.out.println("AreaOfland : "+total);
//		return total;
//		}

}
